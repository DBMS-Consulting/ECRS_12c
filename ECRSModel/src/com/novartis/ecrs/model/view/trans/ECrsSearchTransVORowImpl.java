package com.novartis.ecrs.model.view.trans;

import oracle.jbo.RowSet;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jul 30 13:01:59 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ECrsSearchTransVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CompoundCode {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getCompoundCode();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setCompoundCode((String) value);
            }
        }
        ,
        CompoundCodeId {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getCompoundCodeId();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setCompoundCodeId((Integer) value);
            }
        }
        ,
        CompoundType {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getCompoundType();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setCompoundType((String) value);
            }
        }
        ,
        CrsBsl {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getCrsBsl();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setCrsBsl((String) value);
            }
        }
        ,
        CrsId {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getCrsId();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setCrsId((String) value);
            }
        }
        ,
        CrsMedicalLead {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getCrsMedicalLead();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setCrsMedicalLead((String) value);
            }
        }
        ,
        CrsName {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getCrsName();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setCrsName((String) value);
            }
        }
        ,
        CrsTasl {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getCrsTasl();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setCrsTasl((String) value);
            }
        }
        ,
        Designee {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getDesignee();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setDesignee((String) value);
            }
        }
        ,
        GenericName {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getGenericName();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setGenericName((String) value);
            }
        }
        ,
        Indication {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getIndication();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setIndication((String) value);
            }
        }
        ,
        Marketed {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getMarketed();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setMarketed((String) value);
            }
        }
        ,
        ReleaseStatus {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getReleaseStatus();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setReleaseStatus((String) value);
            }
        }
        ,
        State {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getState();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setState((Integer) value);
            }
        }
        ,
        TradeName {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getTradeName();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setTradeName((String) value);
            }
        }
        ,
        CrsCompoundVA {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getCrsCompoundVA();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CrsStateVA {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getCrsStateVA();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        BSLVA {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getBSLVA();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TASLVA {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getTASLVA();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MLVA {
            public Object get(ECrsSearchTransVORowImpl obj) {
                return obj.getMLVA();
            }

            public void put(ECrsSearchTransVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(ECrsSearchTransVORowImpl object);

        public abstract void put(ECrsSearchTransVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int COMPOUNDCODE = AttributesEnum.CompoundCode.index();
    public static final int COMPOUNDCODEID = AttributesEnum.CompoundCodeId.index();
    public static final int COMPOUNDTYPE = AttributesEnum.CompoundType.index();
    public static final int CRSBSL = AttributesEnum.CrsBsl.index();
    public static final int CRSID = AttributesEnum.CrsId.index();
    public static final int CRSMEDICALLEAD = AttributesEnum.CrsMedicalLead.index();
    public static final int CRSNAME = AttributesEnum.CrsName.index();
    public static final int CRSTASL = AttributesEnum.CrsTasl.index();
    public static final int DESIGNEE = AttributesEnum.Designee.index();
    public static final int GENERICNAME = AttributesEnum.GenericName.index();
    public static final int INDICATION = AttributesEnum.Indication.index();
    public static final int MARKETED = AttributesEnum.Marketed.index();
    public static final int RELEASESTATUS = AttributesEnum.ReleaseStatus.index();
    public static final int STATE = AttributesEnum.State.index();
    public static final int TRADENAME = AttributesEnum.TradeName.index();
    public static final int CRSCOMPOUNDVA = AttributesEnum.CrsCompoundVA.index();
    public static final int CRSSTATEVA = AttributesEnum.CrsStateVA.index();
    public static final int BSLVA = AttributesEnum.BSLVA.index();
    public static final int TASLVA = AttributesEnum.TASLVA.index();
    public static final int MLVA = AttributesEnum.MLVA.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ECrsSearchTransVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CompoundCode.
     * @return the CompoundCode
     */
    public String getCompoundCode() {
        return (String) getAttributeInternal(COMPOUNDCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompoundCode.
     * @param value value to set the  CompoundCode
     */
    public void setCompoundCode(String value) {
        setAttributeInternal(COMPOUNDCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompoundCodeId.
     * @return the CompoundCodeId
     */
    public Integer getCompoundCodeId() {
        return (Integer) getAttributeInternal(COMPOUNDCODEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompoundCodeId.
     * @param value value to set the  CompoundCodeId
     */
    public void setCompoundCodeId(Integer value) {
        setAttributeInternal(COMPOUNDCODEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompoundType.
     * @return the CompoundType
     */
    public String getCompoundType() {
        return (String) getAttributeInternal(COMPOUNDTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompoundType.
     * @param value value to set the  CompoundType
     */
    public void setCompoundType(String value) {
        setAttributeInternal(COMPOUNDTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CrsBsl.
     * @return the CrsBsl
     */
    public String getCrsBsl() {
        return (String) getAttributeInternal(CRSBSL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CrsBsl.
     * @param value value to set the  CrsBsl
     */
    public void setCrsBsl(String value) {
        setAttributeInternal(CRSBSL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CrsId.
     * @return the CrsId
     */
    public String getCrsId() {
        return (String) getAttributeInternal(CRSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CrsId.
     * @param value value to set the  CrsId
     */
    public void setCrsId(String value) {
        setAttributeInternal(CRSID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CrsMedicalLead.
     * @return the CrsMedicalLead
     */
    public String getCrsMedicalLead() {
        return (String) getAttributeInternal(CRSMEDICALLEAD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CrsMedicalLead.
     * @param value value to set the  CrsMedicalLead
     */
    public void setCrsMedicalLead(String value) {
        setAttributeInternal(CRSMEDICALLEAD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CrsName.
     * @return the CrsName
     */
    public String getCrsName() {
        return (String) getAttributeInternal(CRSNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CrsName.
     * @param value value to set the  CrsName
     */
    public void setCrsName(String value) {
        setAttributeInternal(CRSNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CrsTasl.
     * @return the CrsTasl
     */
    public String getCrsTasl() {
        return (String) getAttributeInternal(CRSTASL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CrsTasl.
     * @param value value to set the  CrsTasl
     */
    public void setCrsTasl(String value) {
        setAttributeInternal(CRSTASL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Designee.
     * @return the Designee
     */
    public String getDesignee() {
        return (String) getAttributeInternal(DESIGNEE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Designee.
     * @param value value to set the  Designee
     */
    public void setDesignee(String value) {
        setAttributeInternal(DESIGNEE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute GenericName.
     * @return the GenericName
     */
    public String getGenericName() {
        return (String) getAttributeInternal(GENERICNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute GenericName.
     * @param value value to set the  GenericName
     */
    public void setGenericName(String value) {
        setAttributeInternal(GENERICNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Indication.
     * @return the Indication
     */
    public String getIndication() {
        return (String) getAttributeInternal(INDICATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Indication.
     * @param value value to set the  Indication
     */
    public void setIndication(String value) {
        setAttributeInternal(INDICATION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Marketed.
     * @return the Marketed
     */
    public String getMarketed() {
        return (String) getAttributeInternal(MARKETED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Marketed.
     * @param value value to set the  Marketed
     */
    public void setMarketed(String value) {
        setAttributeInternal(MARKETED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ReleaseStatus.
     * @return the ReleaseStatus
     */
    public String getReleaseStatus() {
        return (String) getAttributeInternal(RELEASESTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ReleaseStatus.
     * @param value value to set the  ReleaseStatus
     */
    public void setReleaseStatus(String value) {
        setAttributeInternal(RELEASESTATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute State.
     * @return the State
     */
    public Integer getState() {
        return (Integer) getAttributeInternal(STATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute State.
     * @param value value to set the  State
     */
    public void setState(Integer value) {
        setAttributeInternal(STATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TradeName.
     * @return the TradeName
     */
    public String getTradeName() {
        return (String) getAttributeInternal(TRADENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TradeName.
     * @param value value to set the  TradeName
     */
    public void setTradeName(String value) {
        setAttributeInternal(TRADENAME, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CrsCompoundVA.
     */
    public RowSet getCrsCompoundVA() {
        return (RowSet) getAttributeInternal(CRSCOMPOUNDVA);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CrsStateVA.
     */
    public RowSet getCrsStateVA() {
        return (RowSet) getAttributeInternal(CRSSTATEVA);
    }

    /**
     * Gets the view accessor <code>RowSet</code> BSLVA.
     */
    public RowSet getBSLVA() {
        return (RowSet) getAttributeInternal(BSLVA);
    }

    /**
     * Gets the view accessor <code>RowSet</code> TASLVA.
     */
    public RowSet getTASLVA() {
        return (RowSet) getAttributeInternal(TASLVA);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MLVA.
     */
    public RowSet getMLVA() {
        return (RowSet) getAttributeInternal(MLVA);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

