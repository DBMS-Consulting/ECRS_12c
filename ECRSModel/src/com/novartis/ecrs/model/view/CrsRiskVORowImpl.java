package com.novartis.ecrs.model.view;

import java.sql.Timestamp;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jun 15 17:54:32 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CrsRiskVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        CrsId {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getCrsId();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CrsRiskId {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getCrsRiskId();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DataDomain {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getDataDomain();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MqmComment {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getMqmComment();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        NonMeddraComponentComment {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getNonMeddraComponentComment();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RiskPurposeCdFlag {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getRiskPurposeCdFlag();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RiskPurposeDsFlag {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getRiskPurposeDsFlag();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RiskPurposeErFlag {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getRiskPurposeErFlag();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RiskPurposeIbFlag {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getRiskPurposeIbFlag();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RiskPurposeMiFlag {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getRiskPurposeMiFlag();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RiskPurposeOsFlag {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getRiskPurposeOsFlag();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RiskPurposePsFlag {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getRiskPurposePsFlag();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RiskPurposeRmFlag {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getRiskPurposeRmFlag();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RiskPurposeSpFlag {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getRiskPurposeSpFlag();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SafetyTopicOfInterest {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getSafetyTopicOfInterest();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SocDictContentEntryTs {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getSocDictContentEntryTs();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SocDictContentId {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getSocDictContentId();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SocTerm {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getSocTerm();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SearchCriteriaDetails {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getSearchCriteriaDetails();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CrsRiskDefnId {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getCrsRiskDefnId();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MeddraCode {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getMeddraCode();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MeddraLevel {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getMeddraLevel();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MeddraQualifier {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getMeddraQualifier();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MeddraTerm {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getMeddraTerm();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MeddraVersion {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getMeddraVersion();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MeddraVersionDate {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getMeddraVersionDate();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TmsDictContentEntryTs {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getTmsDictContentEntryTs();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TmsDictContentId {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getTmsDictContentId();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TmsEndTs {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getTmsEndTs();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TmsUpdateFlag {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getTmsUpdateFlag();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TmsUpdateFlagDt {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getTmsUpdateFlagDt();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RiskPurposeList {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getRiskPurposeList();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MeddraDict {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getMeddraDict();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CrsEffectiveDtRel {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getCrsEffectiveDtRel();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CrsEffectiveDtDef {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getCrsEffectiveDtDef();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MeddraExtension {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getMeddraExtension();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MeddraQualifierUpdFlag {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getMeddraQualifierUpdFlag();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CrsQualifier {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getCrsQualifier();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RiskPurposeUdFlag {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getRiskPurposeUdFlag();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RiskPurposeA1Flag {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getRiskPurposeA1Flag();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RiskPurposeA2Flag {
            protected Object get(CrsRiskVORowImpl obj) {
                return obj.getRiskPurposeA2Flag();
            }

            protected void put(CrsRiskVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected abstract Object get(CrsRiskVORowImpl object);

        protected abstract void put(CrsRiskVORowImpl object, Object value);

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CRSID = AttributesEnum.CrsId.index();
    public static final int CRSRISKID = AttributesEnum.CrsRiskId.index();
    public static final int DATADOMAIN = AttributesEnum.DataDomain.index();
    public static final int MQMCOMMENT = AttributesEnum.MqmComment.index();
    public static final int NONMEDDRACOMPONENTCOMMENT = AttributesEnum.NonMeddraComponentComment.index();
    public static final int RISKPURPOSECDFLAG = AttributesEnum.RiskPurposeCdFlag.index();
    public static final int RISKPURPOSEDSFLAG = AttributesEnum.RiskPurposeDsFlag.index();
    public static final int RISKPURPOSEERFLAG = AttributesEnum.RiskPurposeErFlag.index();
    public static final int RISKPURPOSEIBFLAG = AttributesEnum.RiskPurposeIbFlag.index();
    public static final int RISKPURPOSEMIFLAG = AttributesEnum.RiskPurposeMiFlag.index();
    public static final int RISKPURPOSEOSFLAG = AttributesEnum.RiskPurposeOsFlag.index();
    public static final int RISKPURPOSEPSFLAG = AttributesEnum.RiskPurposePsFlag.index();
    public static final int RISKPURPOSERMFLAG = AttributesEnum.RiskPurposeRmFlag.index();
    public static final int RISKPURPOSESPFLAG = AttributesEnum.RiskPurposeSpFlag.index();
    public static final int SAFETYTOPICOFINTEREST = AttributesEnum.SafetyTopicOfInterest.index();
    public static final int SOCDICTCONTENTENTRYTS = AttributesEnum.SocDictContentEntryTs.index();
    public static final int SOCDICTCONTENTID = AttributesEnum.SocDictContentId.index();
    public static final int SOCTERM = AttributesEnum.SocTerm.index();
    public static final int SEARCHCRITERIADETAILS = AttributesEnum.SearchCriteriaDetails.index();
    public static final int CRSRISKDEFNID = AttributesEnum.CrsRiskDefnId.index();
    public static final int MEDDRACODE = AttributesEnum.MeddraCode.index();
    public static final int MEDDRALEVEL = AttributesEnum.MeddraLevel.index();
    public static final int MEDDRAQUALIFIER = AttributesEnum.MeddraQualifier.index();
    public static final int MEDDRATERM = AttributesEnum.MeddraTerm.index();
    public static final int MEDDRAVERSION = AttributesEnum.MeddraVersion.index();
    public static final int MEDDRAVERSIONDATE = AttributesEnum.MeddraVersionDate.index();
    public static final int TMSDICTCONTENTENTRYTS = AttributesEnum.TmsDictContentEntryTs.index();
    public static final int TMSDICTCONTENTID = AttributesEnum.TmsDictContentId.index();
    public static final int TMSENDTS = AttributesEnum.TmsEndTs.index();
    public static final int TMSUPDATEFLAG = AttributesEnum.TmsUpdateFlag.index();
    public static final int TMSUPDATEFLAGDT = AttributesEnum.TmsUpdateFlagDt.index();
    public static final int RISKPURPOSELIST = AttributesEnum.RiskPurposeList.index();
    public static final int MEDDRADICT = AttributesEnum.MeddraDict.index();
    public static final int CRSEFFECTIVEDTREL = AttributesEnum.CrsEffectiveDtRel.index();
    public static final int CRSEFFECTIVEDTDEF = AttributesEnum.CrsEffectiveDtDef.index();
    public static final int MEDDRAEXTENSION = AttributesEnum.MeddraExtension.index();
    public static final int MEDDRAQUALIFIERUPDFLAG = AttributesEnum.MeddraQualifierUpdFlag.index();
    public static final int CRSQUALIFIER = AttributesEnum.CrsQualifier.index();
    public static final int RISKPURPOSEUDFLAG = AttributesEnum.RiskPurposeUdFlag.index();
    public static final int RISKPURPOSEA1FLAG = AttributesEnum.RiskPurposeA1Flag.index();
    public static final int RISKPURPOSEA2FLAG = AttributesEnum.RiskPurposeA2Flag.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CrsRiskVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CrsId.
     * @return the CrsId
     */
    public Long getCrsId() {
        return (Long) getAttributeInternal(CRSID);
    }

    /**
     * Gets the attribute value for the calculated attribute CrsRiskId.
     * @return the CrsRiskId
     */
    public Long getCrsRiskId() {
        return (Long) getAttributeInternal(CRSRISKID);
    }

    /**
     * Gets the attribute value for the calculated attribute DataDomain.
     * @return the DataDomain
     */
    public String getDataDomain() {
        return (String) getAttributeInternal(DATADOMAIN);
    }

    /**
     * Gets the attribute value for the calculated attribute MqmComment.
     * @return the MqmComment
     */
    public String getMqmComment() {
        return (String) getAttributeInternal(MQMCOMMENT);
    }

    /**
     * Gets the attribute value for the calculated attribute NonMeddraComponentComment.
     * @return the NonMeddraComponentComment
     */
    public String getNonMeddraComponentComment() {
        return (String) getAttributeInternal(NONMEDDRACOMPONENTCOMMENT);
    }

    /**
     * Gets the attribute value for the calculated attribute RiskPurposeCdFlag.
     * @return the RiskPurposeCdFlag
     */
    public String getRiskPurposeCdFlag() {
        return (String) getAttributeInternal(RISKPURPOSECDFLAG);
    }

    /**
     * Gets the attribute value for the calculated attribute RiskPurposeDsFlag.
     * @return the RiskPurposeDsFlag
     */
    public String getRiskPurposeDsFlag() {
        return (String) getAttributeInternal(RISKPURPOSEDSFLAG);
    }

    /**
     * Gets the attribute value for the calculated attribute RiskPurposeErFlag.
     * @return the RiskPurposeErFlag
     */
    public String getRiskPurposeErFlag() {
        return (String) getAttributeInternal(RISKPURPOSEERFLAG);
    }

    /**
     * Gets the attribute value for the calculated attribute RiskPurposeIbFlag.
     * @return the RiskPurposeIbFlag
     */
    public String getRiskPurposeIbFlag() {
        return (String) getAttributeInternal(RISKPURPOSEIBFLAG);
    }

    /**
     * Gets the attribute value for the calculated attribute RiskPurposeMiFlag.
     * @return the RiskPurposeMiFlag
     */
    public String getRiskPurposeMiFlag() {
        return (String) getAttributeInternal(RISKPURPOSEMIFLAG);
    }

    /**
     * Gets the attribute value for the calculated attribute RiskPurposeOsFlag.
     * @return the RiskPurposeOsFlag
     */
    public String getRiskPurposeOsFlag() {
        return (String) getAttributeInternal(RISKPURPOSEOSFLAG);
    }

    /**
     * Gets the attribute value for the calculated attribute RiskPurposePsFlag.
     * @return the RiskPurposePsFlag
     */
    public String getRiskPurposePsFlag() {
        return (String) getAttributeInternal(RISKPURPOSEPSFLAG);
    }

    /**
     * Gets the attribute value for the calculated attribute RiskPurposeRmFlag.
     * @return the RiskPurposeRmFlag
     */
    public String getRiskPurposeRmFlag() {
        return (String) getAttributeInternal(RISKPURPOSERMFLAG);
    }

    /**
     * Gets the attribute value for the calculated attribute RiskPurposeSpFlag.
     * @return the RiskPurposeSpFlag
     */
    public String getRiskPurposeSpFlag() {
        return (String) getAttributeInternal(RISKPURPOSESPFLAG);
    }

    /**
     * Gets the attribute value for the calculated attribute SafetyTopicOfInterest.
     * @return the SafetyTopicOfInterest
     */
    public String getSafetyTopicOfInterest() {
        return (String) getAttributeInternal(SAFETYTOPICOFINTEREST);
    }

    /**
     * Gets the attribute value for the calculated attribute SocDictContentEntryTs.
     * @return the SocDictContentEntryTs
     */
    public Timestamp getSocDictContentEntryTs() {
        return (Timestamp) getAttributeInternal(SOCDICTCONTENTENTRYTS);
    }

    /**
     * Gets the attribute value for the calculated attribute SocDictContentId.
     * @return the SocDictContentId
     */
    public Long getSocDictContentId() {
        return (Long) getAttributeInternal(SOCDICTCONTENTID);
    }

    /**
     * Gets the attribute value for the calculated attribute SocTerm.
     * @return the SocTerm
     */
    public String getSocTerm() {
        return (String) getAttributeInternal(SOCTERM);
    }

    /**
     * Gets the attribute value for the calculated attribute SearchCriteriaDetails.
     * @return the SearchCriteriaDetails
     */
    public String getSearchCriteriaDetails() {
        return (String) getAttributeInternal(SEARCHCRITERIADETAILS);
    }

    /**
     * Gets the attribute value for the calculated attribute CrsRiskDefnId.
     * @return the CrsRiskDefnId
     */
    public Long getCrsRiskDefnId() {
        return (Long) getAttributeInternal(CRSRISKDEFNID);
    }

    /**
     * Gets the attribute value for the calculated attribute MeddraCode.
     * @return the MeddraCode
     */
    public String getMeddraCode() {
        return (String) getAttributeInternal(MEDDRACODE);
    }

    /**
     * Gets the attribute value for the calculated attribute MeddraLevel.
     * @return the MeddraLevel
     */
    public String getMeddraLevel() {
        return (String) getAttributeInternal(MEDDRALEVEL);
    }

    /**
     * Gets the attribute value for the calculated attribute MeddraQualifier.
     * @return the MeddraQualifier
     */
    public String getMeddraQualifier() {
        return (String) getAttributeInternal(MEDDRAQUALIFIER);
    }

    /**
     * Gets the attribute value for the calculated attribute MeddraTerm.
     * @return the MeddraTerm
     */
    public String getMeddraTerm() {
        return (String) getAttributeInternal(MEDDRATERM);
    }

    /**
     * Gets the attribute value for the calculated attribute MeddraVersion.
     * @return the MeddraVersion
     */
    public String getMeddraVersion() {
        return (String) getAttributeInternal(MEDDRAVERSION);
    }

    /**
     * Gets the attribute value for the calculated attribute MeddraVersionDate.
     * @return the MeddraVersionDate
     */
    public Timestamp getMeddraVersionDate() {
        return (Timestamp) getAttributeInternal(MEDDRAVERSIONDATE);
    }

    /**
     * Gets the attribute value for the calculated attribute TmsDictContentEntryTs.
     * @return the TmsDictContentEntryTs
     */
    public Timestamp getTmsDictContentEntryTs() {
        return (Timestamp) getAttributeInternal(TMSDICTCONTENTENTRYTS);
    }

    /**
     * Gets the attribute value for the calculated attribute TmsDictContentId.
     * @return the TmsDictContentId
     */
    public Long getTmsDictContentId() {
        return (Long) getAttributeInternal(TMSDICTCONTENTID);
    }

    /**
     * Gets the attribute value for the calculated attribute TmsEndTs.
     * @return the TmsEndTs
     */
    public Timestamp getTmsEndTs() {
        return (Timestamp) getAttributeInternal(TMSENDTS);
    }

    /**
     * Gets the attribute value for the calculated attribute TmsUpdateFlag.
     * @return the TmsUpdateFlag
     */
    public String getTmsUpdateFlag() {
        return (String) getAttributeInternal(TMSUPDATEFLAG);
    }

    /**
     * Gets the attribute value for the calculated attribute TmsUpdateFlagDt.
     * @return the TmsUpdateFlagDt
     */
    public Timestamp getTmsUpdateFlagDt() {
        return (Timestamp) getAttributeInternal(TMSUPDATEFLAGDT);
    }

    /**
     * Gets the attribute value for the calculated attribute RiskPurposeList.
     * @return the RiskPurposeList
     */
    public String getRiskPurposeList() {
        return (String) getAttributeInternal(RISKPURPOSELIST);
    }

    /**
     * Gets the attribute value for the calculated attribute MeddraDict.
     * @return the MeddraDict
     */
    public String getMeddraDict() {
        return (String) getAttributeInternal(MEDDRADICT);
    }

    /**
     * Gets the attribute value for the calculated attribute CrsEffectiveDtRel.
     * @return the CrsEffectiveDtRel
     */
    public Timestamp getCrsEffectiveDtRel() {
        return (Timestamp) getAttributeInternal(CRSEFFECTIVEDTREL);
    }

    /**
     * Gets the attribute value for the calculated attribute CrsEffectiveDtDef.
     * @return the CrsEffectiveDtDef
     */
    public Timestamp getCrsEffectiveDtDef() {
        return (Timestamp) getAttributeInternal(CRSEFFECTIVEDTDEF);
    }

    /**
     * Gets the attribute value for the calculated attribute MeddraExtension.
     * @return the MeddraExtension
     */
    public String getMeddraExtension() {
        return (String) getAttributeInternal(MEDDRAEXTENSION);
    }

    /**
     * Gets the attribute value for the calculated attribute MeddraQualifierUpdFlag.
     * @return the MeddraQualifierUpdFlag
     */
    public String getMeddraQualifierUpdFlag() {
        return (String) getAttributeInternal(MEDDRAQUALIFIERUPDFLAG);
    }

    /**
     * Gets the attribute value for the calculated attribute CrsQualifier.
     * @return the CrsQualifier
     */
    public String getCrsQualifier() {
        return (String) getAttributeInternal(CRSQUALIFIER);
    }

    /**
     * Gets the attribute value for the calculated attribute RiskPurposeUdFlag.
     * @return the RiskPurposeUdFlag
     */
    public String getRiskPurposeUdFlag() {
        return (String) getAttributeInternal(RISKPURPOSEUDFLAG);
    }

    /**
     * Gets the attribute value for the calculated attribute RiskPurposeA1Flag.
     * @return the RiskPurposeA1Flag
     */
    public String getRiskPurposeA1Flag() {
        return (String) getAttributeInternal(RISKPURPOSEA1FLAG);
    }

    /**
     * Gets the attribute value for the calculated attribute RiskPurposeA2Flag.
     * @return the RiskPurposeA2Flag
     */
    public String getRiskPurposeA2Flag() {
        return (String) getAttributeInternal(RISKPURPOSEA2FLAG);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

