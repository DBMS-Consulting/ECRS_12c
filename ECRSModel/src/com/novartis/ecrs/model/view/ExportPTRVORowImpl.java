package com.novartis.ecrs.model.view;

import oracle.jbo.RowSet;
import oracle.jbo.domain.BFileDomain;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 15 01:23:53 IST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ExportPTRVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        CrsId {
            protected Object get(ExportPTRVORowImpl obj) {
                return obj.getCrsId();
            }

            protected void put(ExportPTRVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CrsName {
            protected Object get(ExportPTRVORowImpl obj) {
                return obj.getCrsName();
            }

            protected void put(ExportPTRVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CompoundType {
            protected Object get(ExportPTRVORowImpl obj) {
                return obj.getCompoundType();
            }

            protected void put(ExportPTRVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CompoundCode {
            protected Object get(ExportPTRVORowImpl obj) {
                return obj.getCompoundCode();
            }

            protected void put(ExportPTRVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        BslName {
            protected Object get(ExportPTRVORowImpl obj) {
                return obj.getBslName();
            }

            protected void put(ExportPTRVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TaslName {
            protected Object get(ExportPTRVORowImpl obj) {
                return obj.getTaslName();
            }

            protected void put(ExportPTRVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        StateName {
            protected Object get(ExportPTRVORowImpl obj) {
                return obj.getStateName();
            }

            protected void put(ExportPTRVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DesigneeName {
            protected Object get(ExportPTRVORowImpl obj) {
                return obj.getDesigneeName();
            }

            protected void put(ExportPTRVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SelectRow {
            protected Object get(ExportPTRVORowImpl obj) {
                return obj.getSelectRow();
            }

            protected void put(ExportPTRVORowImpl obj, Object value) {
                obj.setSelectRow((Boolean) value);
            }
        }
        ,
        CrsCompoundVA {
            protected Object get(ExportPTRVORowImpl obj) {
                return obj.getCrsCompoundVA();
            }

            protected void put(ExportPTRVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CompundTypeVA {
            protected Object get(ExportPTRVORowImpl obj) {
                return obj.getCompundTypeVA();
            }

            protected void put(ExportPTRVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;


        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }


        protected abstract Object get(ExportPTRVORowImpl object);

        protected abstract void put(ExportPTRVORowImpl object, Object value);
    }


    public static final int CRSID = AttributesEnum.CrsId.index();
    public static final int CRSNAME = AttributesEnum.CrsName.index();
    public static final int COMPOUNDTYPE = AttributesEnum.CompoundType.index();
    public static final int COMPOUNDCODE = AttributesEnum.CompoundCode.index();
    public static final int BSLNAME = AttributesEnum.BslName.index();
    public static final int TASLNAME = AttributesEnum.TaslName.index();
    public static final int STATENAME = AttributesEnum.StateName.index();
    public static final int DESIGNEENAME = AttributesEnum.DesigneeName.index();
    public static final int SELECTROW = AttributesEnum.SelectRow.index();
    public static final int CRSCOMPOUNDVA = AttributesEnum.CrsCompoundVA.index();
    public static final int COMPUNDTYPEVA = AttributesEnum.CompundTypeVA.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ExportPTRVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CrsId.
     * @return the CrsId
     */
    public Long getCrsId() {
        return (Long) getAttributeInternal(CRSID);
    }

    /**
     * Gets the attribute value for the calculated attribute CrsName.
     * @return the CrsName
     */
    public String getCrsName() {
        return (String) getAttributeInternal(CRSNAME);
    }

    /**
     * Gets the attribute value for the calculated attribute CompoundType.
     * @return the CompoundType
     */
    public String getCompoundType() {
        return (String) getAttributeInternal(COMPOUNDTYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute CompoundCode.
     * @return the CompoundCode
     */
    public String getCompoundCode() {
        return (String) getAttributeInternal(COMPOUNDCODE);
    }

    /**
     * Gets the attribute value for the calculated attribute BslName.
     * @return the BslName
     */
    public String getBslName() {
        return (String) getAttributeInternal(BSLNAME);
    }

    /**
     * Gets the attribute value for the calculated attribute TaslName.
     * @return the TaslName
     */
    public String getTaslName() {
        return (String) getAttributeInternal(TASLNAME);
    }

    /**
     * Gets the attribute value for the calculated attribute StateName.
     * @return the StateName
     */
    public String getStateName() {
        return (String) getAttributeInternal(STATENAME);
    }

    /**
     * Gets the attribute value for the calculated attribute DesigneeName.
     * @return the DesigneeName
     */
    public String getDesigneeName() {
        return (String) getAttributeInternal(DESIGNEENAME);
    }

    /**
     * Gets the attribute value for the calculated attribute SelectRow.
     * @return the SelectRow
     */
    public Boolean getSelectRow() {
        return (Boolean) getAttributeInternal(SELECTROW);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SelectRow.
     * @param value value to set the  SelectRow
     */
    public void setSelectRow(Boolean value) {
        setAttributeInternal(SELECTROW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CrsCompoundVA.
     */
    public RowSet getCrsCompoundVA() {
        return (RowSet) getAttributeInternal(CRSCOMPOUNDVA);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CompundTypeVA.
     */
    public RowSet getCompundTypeVA() {
        return (RowSet) getAttributeInternal(COMPUNDTYPEVA);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

